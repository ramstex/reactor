@use 'sass:math';
@use 'sass:color';
@use '../../../style/colors/data.scss' as colors;
@use '../../../style/fonts/data.scss' as fonts;
@use '../../../style/layout/data.scss' as layout;
@use '../../../style/typography/data.scss' as typography;

$themes: (
	primary: text,
	secondary: back,
	success: back,
	warning: text,
	danger: back,
	info: text,
);

.ui-button {
	display: flex;
	justify-content: center;
	align-items: center;
	width: fit-content;
	border-width: 1px;
	border-style: solid;
	font-size: 14px;
	line-height: 1;
	font-family: fonts.$primary;
	white-space: nowrap;
	text-decoration: none;
	text-align: center;
	cursor: pointer;
	-webkit-appearance: none;
	transition: all 0.3s ease;

	&._wide {
		width: 100%;
	}

	&._theme {
		@each $theme, $text in $themes {
			&_#{$theme} {
				border-color: colors.getColor($theme);
				color: colors.getColor($text);
				background-color: colors.getColor($theme);

				&._ghost {
					color: colors.getColor($theme);
					background-color: transparent;
				}

				&:hover,
				&._active {
					border-color: colors.getColor($theme + '-light');
					color: colors.getColor($text);
					background-color: colors.getColor($theme + '-light');
					outline: none;
				}
			}
		}
	}

	&._size {
		&_lg {
			padding: layout.$gap * 0.75 layout.$gap * 1.5;
		}

		&_md {
			padding: math.div(layout.$gap, 2) layout.$gap;
		}

		&_sm {
			font-size: 12px;
			padding: math.div(layout.$gap, 3.5) math.div(layout.$gap, 2);
		}
	}

	&._disabled {
		border-color: colors.getColor('muted');
		color: colors.getColor('back');
		background-color: colors.getColor('muted');
		pointer-events: none;
		cursor: default;

		&._ghost {
			border-color: colors.getColor('muted');
			color: colors.getColor('muted');
			background-color: transparent;
		}
	}
}
